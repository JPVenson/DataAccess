using System;
using JPB.DataAccess.Anonymous;

namespace JPB.DataAccess.ModelsAnotations
{
	/// <summary>
	///     Marks a Property as ReadOnly with AutoGenerated Anonymous value.
	///     This is Database->Poco only
	/// </summary>
	[Obsolete("Feature for Anonymous Objects are rejected and will be completely removed in future")]
	public class AnonymousObjectGenerationAttribute : InsertIgnoreAttribute
	{
		/// <summary>
		/// </summary>
		public AnonymousObjectGenerationAttribute()
		{
		}

		/// <summary>
		/// </summary>
		/// <param name="anonymousObjectGenerator">Can Be Null. If set this Generator is used instead of an default one</param>
		public AnonymousObjectGenerationAttribute(Type anonymousObjectGenerator)
		{
			if (anonymousObjectGenerator != null)
			{
				if (!typeof(IAnonymousObjectGenerator).IsAssignableFrom(anonymousObjectGenerator))
				{
					throw new InvalidOperationException(string.Format("The type {0} is not assignable to the expected type of {1}",
					anonymousObjectGenerator, typeof(IAnonymousObjectGenerator)));
				}
				AnonymousObjectGenerator = anonymousObjectGenerator;
			}
		}

		/// <summary>
		///     Can Be Null. If set this Generator is used instead of an default one
		/// </summary>
		public Type AnonymousObjectGenerator { get; private set; }

		internal IAnonymousObjectGenerator CreateConverter()
		{
			//TODO Cache converter results
			return (IAnonymousObjectGenerator) Activator.CreateInstance(AnonymousObjectGenerator);
		}
	}
}